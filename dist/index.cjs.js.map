{"version":3,"file":"index.cjs.js","sources":["../src/utils/error.ts","../src/error.ts","../src/utils/serializer.ts","../src/serializer.ts"],"sourcesContent":["'use strict';\n\nimport { IError } from '../interface';\n\nexport const ErrorUtils = (errors: IError[]) =>\n  errors.reduce<IError[]>((_errors, error) => {\n    _errors.push({\n      ...(error.id && { id: error.id }),\n      ...(error.status && { status: error.status }),\n      ...(error.code && { code: error.code }),\n      ...(error.title && { title: error.title }),\n      ...(error.detail && { detail: error.detail }),\n      ...(error.source && {\n        source: {\n          ...(error.source.pointer && { pointer: error.source.pointer }),\n          ...(error.source.parameter && { parameter: error.source.parameter })\n        }\n      }),\n      ...(error.links && { links: { about: error.links.about } }),\n      ...(error.meta && { meta: error.meta })\n    });\n    return _errors;\n  }, []);\n","import { ErrorUtils } from './utils/error';\nimport { IError } from './interface';\n\nexport class JSONAPIError {\n  errors: IError[];\n\n  constructor(opts?: IError | IError[]) {\n    const _opts = opts || [];\n    this.errors = Array.isArray(_opts) ? ErrorUtils(_opts) : ErrorUtils([_opts]);\n  }\n}\n","import * as pluralize from 'pluralize';\n\nimport { ISerializeOptions, IResource, IAttribute } from '../interface';\n\nexport class SerializerUtils {\n  private resourceName = '';\n  private opts: ISerializeOptions = { attributes: [] };\n\n  get id(): string {\n    return this.opts.id || 'id';\n  }\n\n  get type(): string {\n    return pluralize.plural(this.resourceName);\n  }\n\n  withName(resourceName: string): SerializerUtils {\n    this.resourceName = resourceName;\n    return this;\n  }\n\n  withOptions(opts: ISerializeOptions): SerializerUtils {\n    this.opts = opts;\n    return this;\n  }\n\n  private getAttributes(record: Record<string, any>): IAttribute {\n    return Object.keys(record)\n      .filter(key => this.opts.attributes.includes(key))\n      .reduce((_record, key) => ({ ..._record, ...{ [key]: record[key] } }), {});\n  }\n\n  build(record: Record<string, any>): IResource {\n    return {\n      id: record[this.id],\n      type: this.type,\n      attributes: this.getAttributes(record)\n    };\n  }\n}\n","import { IJSON, ISerializeOptions, IResource } from './interface';\nimport { SerializerUtils } from './utils/serializer';\n\nexport class JSONAPISerializer {\n  private resourceName: string;\n  private opts: ISerializeOptions;\n\n  constructor(resourceName: string, opts: ISerializeOptions) {\n    this.resourceName = resourceName;\n    this.opts = opts;\n  }\n\n  private getResource(record: Record<string, any>): IResource {\n    return new SerializerUtils()\n      .withName(this.resourceName)\n      .withOptions(this.opts)\n      .build(record);\n  }\n\n  private getCollection(records: Record<string, any>[]): IJSON {\n    return {\n      data: records.map(record => this.getResource(record))\n    };\n  }\n\n  public serialize(records: Record<string, any> | Record<string, any>[]): IJSON {\n    if (Array.isArray(records)) {\n      return this.getCollection(records);\n    }\n    return {\n      data: this.getResource(records)\n    };\n  }\n}\n"],"names":["pluralize.plural"],"mappings":"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"}